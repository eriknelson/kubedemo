---
# TODO automatically detect this with "kubeadm version"
#- name: Pull images
  #command: /usr/bin/docker pull {{ item }}
  #with_items:
  #- "gcr.io/google_containers/kube-proxy-amd64:v1.6.0"
  #- "gcr.io/google_containers/kube-controller-manager-amd64:v1.6.0"
  #- "gcr.io/google_containers/kube-apiserver-amd64:v1.6.0"
  #- "gcr.io/google_containers/kube-scheduler-amd64:v1.6.0"
- name: Pull images
  command: /usr/bin/docker pull {{ item }}
  with_items:
  - "gcr.io/google_containers/kube-proxy-amd64:v1.7.4"
  - "gcr.io/google_containers/kube-controller-manager-amd64:v1.7.4"
  - "gcr.io/google_containers/kube-apiserver-amd64:v1.7.4"
  - "gcr.io/google_containers/kube-scheduler-amd64:v1.7.4"

- name: Generate cluster token
  command: /usr/bin/kubeadm token generate
  register: kubeadm_token_generate
  when: kubeadm_token is not defined

- set_fact: kubeadm_token={{ kubeadm_token_generate.stdout }}
  when: kubeadm_token is not defined

- name: Copy kubeadm_token to httpd server
  copy: content="{{ kubeadm_token }}" dest=/var/www/html/token

- name: Initialize cluster
  command: /usr/bin/kubeadm init --token {{ kubeadm_token }} --apiserver-advertise-address=192.168.66.2 --pod-network-cidr=10.244.0.0/16

#- name: Get dynamic kubeversion
  #command: "/vagrant/internal_cluster/_encode_kube_version.sh"
  #register: kube_version

- name: Apply flannel one
  command: "/usr/bin/kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml"
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf

- name: Apply flannel two
  command: "/usr/bin/kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel-rbac.yml"
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf

- name: Wait 1 minute for images pulls and cluster services to start
  pause: minutes=1

- name: Own /etc/kubernetes/admin.conf
  file:
    path: /etc/kubernetes/admin.conf
    owner: vagrant
    group: vagrant
    mode: 0644
  become: true
